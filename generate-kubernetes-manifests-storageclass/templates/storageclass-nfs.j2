---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: storageclass-nfs-{{ item.name }}
  namespace: {{ storagecalss_namespace }}


---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: storageclass-nfs-{{ item.name }}
  namespace: {{ storagecalss_namespace }}
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["create", "delete", "get", "list", "watch", "patch", "update"]


---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: storageclass-nfs-{{ item.name }}
  namespace: {{ storagecalss_namespace }}
subjects:
  - kind: ServiceAccount
    name: storageclass-nfs-{{ item.name }}
    namespace: {{ storagecalss_namespace }}
roleRef:
  kind: ClusterRole
  name: storageclass-nfs-{{ item.name }}
  apiGroup: rbac.authorization.k8s.io


---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: storageclass-nfs-{{ item.name }}
  namespace: {{ storagecalss_namespace }}
provisioner: fuseim.pri/storageclass-nfs-{{ item.name }}


---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: storageclass-nfs-{{ item.name }}
  namespace: {{ storagecalss_namespace }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: storageclass-nfs-{{ item.name }}
  template:
    metadata:
      labels:
        app: storageclass-nfs-{{ item.name }}
    spec:
      serviceAccountName: storageclass-nfs-{{ item.name }}
      containers:
        - name: {{ item.name }}
          image: {{ storagecalss_nfs_image }}
          volumeMounts:
            - name: nfs-client-root
              mountPath: /persistentvolumes
          env:
            - name: PROVISIONER_NAME
              value: fuseim.pri/storageclass-nfs-{{ item.name }}
            - name: NFS_SERVER
              value: {{ item.nfs_server }}
            - name: NFS_PATH
              value: {{ item.nfs_server_shared_dir }}
      volumes:
        - name: nfs-client-root
          nfs:
            server: {{ item.nfs_server }}
            path: {{ item.nfs_server_shared_dir }}