apiVersion: v1
kind: Service
metadata:
  name: keycloak
  namespace: keycloak
  labels:
    app: keycloak
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: keycloak
  type: ClusterIP



---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-nodeport
  namespace: keycloak
  labels:
    app: keycloak-nodeport
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: keycloak
  type: NodePort


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: keycloak
  labels:
    app: keycloak
spec:
  # 当前keycloak使用的是"standalone clustered"模式，理论上replicas可以设置为大于1，但是在测试过登录时出现无限循环。
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
      - name: keycloak
        image: harbor.freedom.org/quay.io/keycloak:16.1.0
        env:
          - name: KEYCLOAK_USER
            value: "admin"
          - name: KEYCLOAK_PASSWORD
            value: "admin"
          - name: PROXY_ADDRESS_FORWARDING
            value: "true"
          - name: DB_VENDOR
            value: "mysql"
          - name: DB_ADDR
            value: "keycloak-0.keycloak.mysql"
          - name: DB_PORT
            value: "3306"
          - name: DB_DATABASE
            value: "keycloak"
          - name: DB_USER
            value: "keycloak"
          - name: DB_PASSWORD
            value: "Keycloak_2@220102"
          # https://github.com/keycloak/keycloak-containers/blob/16.1.0/server/README.md#replication-and-fail-over
          - name: CACHE_OWNERS_COUNT
            value: "1"
          - name: CACHE_OWNERS_AUTH_SESSIONS_COUNT
            value: "1"
          # https://github.com/keycloak/keycloak-containers/blob/16.1.0/server/README.md#enable-some-metrics
          - name: KEYCLOAK_STATISTICS
            value: "all"
        ports:
        - name: http
          containerPort: 8080
        - name: https
          containerPort: 8443
        readinessProbe:
          httpGet:
            path: /auth/realms/master
            port: 8080
