apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak-mysql
  namespace: keycloak
  labels:
    name: keycloak-mysql
spec:
  serviceName: keycloak-mysql
  replicas: 1
  selector:
    matchLabels:
      name: keycloak-mysql
  template:
    metadata:
      labels:
        name: keycloak-mysql
    spec:
      containers:
        - name: keycloak-mysql
          image: harbor.freedom.org/docker.io/mysql:5.7.29
          env:
            - name: TZ
              value: Asia/Shanghai
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: keycloak-mysql-vars
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: keycloak-mysql-vars
                  key: MYSQL_DATABASE
            - name: MYSQL_USER
              valueFrom:
                configMapKeyRef:
                  name: keycloak-mysql-vars
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: keycloak-mysql-vars
                  key: MYSQL_PASSWORD
          ports:
            - containerPort: 3306
          resources:
            limits:
              cpu: 4000m
              memory: 8192Mi
            requests:
              cpu: 100m
              memory: 1024Mi
          volumeMounts:
            - name: keycloak-mysql-data
              mountPath: /var/lib/mysql
            - name: keycloak-mysql-conf
              mountPath: /etc/mysql/conf.d
              readOnly: true
      volumes:
        - name: keycloak-mysql-conf
          configMap:
            name: keycloak-mysql-conf
  volumeClaimTemplates:
    - metadata:
        name: keycloak-mysql-data
        annotations:
          volume.beta.kubernetes.io/storage-class: storageclass-nfs-mysql
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 50Gi