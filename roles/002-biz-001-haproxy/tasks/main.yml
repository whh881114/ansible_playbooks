---
- name: install haproxy
  yum:
    name: haproxy
    state: present

- name: install haproxy cert file
  copy:
    src: haproxy.crt
    dest: /etc/ssl/certs/haproxy.crt

- name: configure rsyslog for haproxy step 1
  lineinfile: 
    path: /etc/rsyslog.conf
    line: "{{ item.line }}"
    insertafter: "{{ item.insertafter }}"
  with_items:
    - { line: '$ModLoad imudp', insertafter: '^\#\$ModLoad imudp' }
    - { line: '$UDPServerRun 514', insertafter: '^\#\$UDPServerRun 514' }
    - { line: 'local2.*  /var/log/haproxy.log', insertafter: None }
  notify: restart-rsyslog

- block:
    - name: update systemd haproxy service
      lineinfile: 
        path: /usr/lib/systemd/system/haproxy.service
        regexp: "{{item.regexp }}"
        line: "{{ item.line }}"
        insertafter: "{{ item.insertafter }}"
      with_items:
        - { regexp: '^RestartSec=', line: 'RestartSec=1s', insertafter: '^KillMode=' }
        - { regexp: '^Restart=', line: 'Restart=on-failure', insertafter: '^KillMode=' }
      notify: 
        - systemctl-daemon-reload
        - systemctl-enable-haproxy
        - start-haproxy

    - name: update systemd haproxy service
      lineinfile:
        path: /usr/lib/systemd/system/haproxy.service
        line: "LimitNOFILE=100000"
        insertafter: '\[Service\]'
      notify:
        - systemctl-daemon-reload
        - start-haproxy
  when: (ansible_distribution == "CentOS" or ansible_distribution == "RedHat") and ansible_distribution_major_version == "7"

- name: generate consul template sub hcl
  tags: generate-config
  template:
    src: consul-template/haproxy-hcl.j2
    dest: "{{ consul_template_config_dir }}/haproxy.hcl"
    mode: 0644
  notify: restart-consul-template

- name: generate consul template ctmpl
  tags: generate-consul-template
  template:
    src: consul-template/{{ haproxy_ctmpl }}.j2
    dest: "{{ consul_template_data_dir }}/haproxy.ctmpl"
    variable_start_string: '[['
    variable_end_string: ']]'
    mode: 0644
  notify: restart-consul-template
