- name: install base packages
  yum:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - java-1.8.0-openjdk
      - java-1.8.0-openjdk-accessibility
      - java-1.8.0-openjdk-accessibility-debug
      - java-1.8.0-openjdk-debug
      - java-1.8.0-openjdk-demo
      - java-1.8.0-openjdk-demo-debug
      - java-1.8.0-openjdk-devel
      - java-1.8.0-openjdk-devel-debug
      - java-1.8.0-openjdk-headless
      - java-1.8.0-openjdk-headless-debug
      - java-1.8.0-openjdk-javadoc
      - java-1.8.0-openjdk-javadoc-debug
      - java-1.8.0-openjdk-javadoc-zip
      - java-1.8.0-openjdk-javadoc-zip-debug
      - java-1.8.0-openjdk-src
      - java-1.8.0-openjdk-src-debug


- name: Configure a generic user for elk.
  user:
    name: "{{ user_name }}"
    uid: "{{ user_id }}"
    password: "{{ user_passwd }}"
    shell: "{{ user_shell }}"
    state: present


- name: Unarchive elasticsearch package.
  unarchive:
    src: "{{ pkg_url }}"
    dest: "{{ pkg_dest }}"
    remote_src: yes
    owner: "{{ user_name }}"
    group: "{{ user_name }}"


- name: Create the elk elasticsearch link.
  file:
    src: "{{ pkg_dest }}/{{ pkg }}"
    dest: "{{ pkg_link_dir }}"
    state: link


- name: Create elasticsearch plugin directories.
  file:
    path: "{{ pkg_link_dir }}/plugins/{{ item.dir }}"
    state: directory
    recurse: yes
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
  with_items:
    - {"dir": "ik"}


- name: Unarchive elasticsearch plugins.
  unarchive:
    src: "ftp://foreman.example.com/pub/elk/{{ item.src }}"
    dest: "{{ pkg_link_dir }}/plugins/{{ item.dest }}"
    remote_src: yes
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
  with_items:
    - {"src": elasticsearch-analysis-ik-6.5.4.zip, "dest": "ik"}